LIVE BLOCK OPERATIONS
=====================

High level description of live block operations.

Snapshot live merge
===================

Given a snapshot chain, described in this document in the following
format:

[A] -> [B] -> [C] -> [D]

Where the rightmost object ([D] in the example) described is the current
image which the guest OS has write access to. To the left of it is its base
image, and so on accordingly until the leftmost image, which has no
base.

The snapshot live merge operation transforms such a chain into a
smaller one with fewer elements, such as this transformation relative
to the first example:

[A] -> [D]

Currently only forward merge with target being the active image is
supported, that is, data copy is performed in the right direction with
destination being the rightmost image.

The operation is implemented in QEMU through image streaming facilities.

The basic idea is to execute 'block_stream virtio0' while the guest is
running. Progress can be monitored using 'info block-jobs'. When the
streaming operation completes it raises a QMP event. 'block_stream'
copies data from the backing file(s) into the active image. When finished,
it adjusts the backing file pointer.

The 'base' parameter specifies an image which data need not be streamed from.
This image will be used as the backing file for the active image when the
operation is finished.

In the example above, the command would be:

(qemu) block_stream virtio0 A


Live block migration
====================

Migrating an in use image to another destination in the filesystem
is done through image mirroring.  The idea is to execute
'drive_mirror virtio0 /new-path/disk.img qcow2' while the guest
is running.  The topmost image ([D] in the example above) will
be copied to the given path, and the two can be kept in sync.

Progress can be monitored using 'info block-jobs'.  Once this command
reports something like

  Type mirror, device virtio0: Completed 1048576000 of 1048576000 bytes

Right now there is no command to start writing to the destination
only.  However, the following commands are guaranteed to leave the
source and target synchronized:

- quit
- migrate
- block-job-cancel
- device_del


Live block copy
===============

To copy an in use image to another destination in the filesystem, one
should create a live snapshot in the desired destination, then stream
into that image. Example:

(qemu) snapshot_blkdev ide0-hd0 /new-path/disk.img qcow2

(qemu) block_stream ide0-hd0

Note that if one image in the chain is in raw format, the
resulting copy might not be thin-provisioned anymore, depending on
the underlying file system.

You can also use mirroring with the -f option:

(qemu) drive_mirror -f virtio0 /new-path/disk.img qcow2

In this case it is also possible to use raw as the format of the
destination image.  Converting an image to raw will properly support
thin provisioning.  However, be aware that right now mirroring cannot
be stopped except by terminating QEMU or unplugging the device.

